"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Ç—Ä–∞—Ñ–∏–∫–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from utils import helpers
from database.db_manager import DatabaseManager

def test_traffic_formatting():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –æ–±—ä—ë–º–∞"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –æ–±—ä—ë–º–∞ ===")
    
    test_cases = [
        0,
        1024,
        1024 * 1024,
        1024 * 1024 * 1024,
        1024 * 1024 * 1024 * 2.5,
        None
    ]
    
    for value in test_cases:
        formatted = helpers.format_traffic_size(value)
        print(f"{value} -> {formatted}")

def test_days_calculation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á—ë—Ç–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π"""
    print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á—ë—Ç–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π ===")
    
    from datetime import datetime, timedelta
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥–∞—Ç
    now = datetime.now()
    test_cases = [
        now + timedelta(days=5),  # 5 –¥–Ω–µ–π –≤–ø–µ—Ä—ë–¥
        now + timedelta(days=1),  # –ó–∞–≤—Ç—Ä–∞
        now,                      # –°–µ–≥–æ–¥–Ω—è
        now - timedelta(days=1),  # –í—á–µ—Ä–∞
        None                      # –ë–µ–∑ –¥–∞—Ç—ã
    ]
    
    for date in test_cases:
        days = helpers.calculate_days_remaining(date)
        print(f"{date} -> {days} –¥–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å")

def test_database_functions():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ===")
    
    try:
        db = DatabaseManager()
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è UUID –∫–ª–∏–µ–Ω—Ç–æ–≤
        user_id = 1  # –¢–µ—Å—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ID 1
        uuids = db.get_all_client_uuids_for_user(user_id)
        print(f"UUID –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {len(uuids)} –∑–∞–ø–∏—Å–µ–π")
        
        for uuid_info in uuids:
            print(f"  - UUID: {uuid_info['client_uuid']}, Server: {uuid_info['server_id']}")
            
            # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—Ä–∞—Ñ–∏–∫–µ
            traffic_info = db.get_client_traffic_info(uuid_info['client_uuid'])
            if traffic_info:
                print(f"    –¢—Ä–∞—Ñ–∏–∫: {traffic_info}")
            else:
                print(f"    –¢—Ä–∞—Ñ–∏–∫: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    print("üöÄ –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Ç—Ä–∞—Ñ–∏–∫–∞\n")
    
    test_traffic_formatting()
    test_days_calculation()
    test_database_functions()
    
    print("\n‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")