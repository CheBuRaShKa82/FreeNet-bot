# utils/bot_helpers.py (—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –∏ –ø–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è)

import telebot
import qrcode
from io import BytesIO
import logging
import datetime
import uuid
import json
import os
# –ò–º–ø–æ—Ä—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞
from .config_generator import ConfigGenerator # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å
from . import messages, helpers

logger = logging.getLogger(__name__)

def send_subscription_info(bot: telebot.TeleBot, user_id: int, sub_link: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ —Å —Å—Å—ã–ª–∫–æ–π –∏ QR-–∫–æ–¥–æ–º."""
    bot.send_message(user_id, messages.CONFIG_DELIVERY_HEADER, parse_mode='Markdown')
    bot.send_message(user_id, messages.CONFIG_DELIVERY_SUB_LINK.format(sub_link=sub_link), parse_mode='Markdown')
    try:
        qr_image = qrcode.make(sub_link)
        bio = BytesIO()
        bio.name = 'qrcode.jpeg'
        qr_image.save(bio, 'JPEG')
        bio.seek(0)
        bot.send_photo(user_id, bio, caption=messages.QR_CODE_CAPTION)
    except Exception as e:
        logger.error(f"Failed to generate or send QR code: {e}")

def finalize_profile_purchase(bot, db_manager, user_telegram_id, order_details):
    """
    –ó–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–ª–∞—Å—Å–∞ ConfigGenerator. (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    """
    bot.send_message(user_telegram_id, "‚úÖ –í–∞—à –ø–ª–∞—Ç–µ–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –º—ã —Å–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è...")
    
    profile_details = order_details['profile_details']
    requested_gb = order_details['requested_gb']
    
    config_gen = ConfigGenerator(db_manager)
    
    # --- –û—Å–Ω–æ–≤–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–¥–µ—Å—å ---
    # –ú—ã –Ω–µ —Å–æ–∑–¥–∞–µ–º –Ω–∏–∫–∞–∫–∏—Ö –∏–º–µ–Ω –≤—Ä—É—á–Ω—É—é –∏ –ø–æ–∑–≤–æ–ª—è–µ–º ConfigGenerator'—É –¥–µ–ª–∞—Ç—å —Å–≤–æ—é —Ä–∞–±–æ—Ç—É.
    # –ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ custom_remark=None –ª–æ–≥–∏–∫–∞ –±—Ä–µ–Ω–¥–∏–Ω–≥–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ —Å–∞–º–æ–º ConfigGenerator.
    generated_configs, client_details = config_gen.create_subscription_for_profile(
        user_telegram_id=user_telegram_id,
        profile_id=profile_details['id'],
        total_gb=requested_gb,
        custom_remark=None 
    )
    
    if not client_details:
        bot.send_message(user_telegram_id, "‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.")
        return

    user_db_info = db_manager.get_user_by_telegram_id(user_telegram_id)
    duration_days = profile_details['duration_days']
    expire_date = (datetime.datetime.now() + datetime.timedelta(days=duration_days)) if duration_days > 0 else None
    
    new_sub_id = str(uuid.uuid4().hex)
    
    # –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–∫—É–ø–∫–∏ –Ω–∞–º –Ω—É–∂–µ–Ω ID –æ–¥–Ω–æ–≥–æ –∏–∑ —Å–µ—Ä–≤–µ—Ä–æ–≤ –ø—Ä–æ—Ñ–∏–ª—è
    profile_inbounds = db_manager.get_inbounds_for_profile(profile_details['id'], with_server_info=True)
    representative_server_id = profile_inbounds[0]['server']['id'] if profile_inbounds else None

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_manager.add_purchase(
        user_id=user_db_info['id'], 
        server_id=representative_server_id, 
        plan_id=None,
        profile_id=profile_details['id'], 
        expire_date=expire_date.strftime("%Y-%m-%d %H:%M:%S") if expire_date else None,
        initial_volume_gb=requested_gb, 
        client_uuids=client_details['uuids'],
        client_email=client_details['email'], 
        sub_id=new_sub_id,
        single_configs_json=json.dumps(generated_configs)
    )
    
    # –î–æ—Å—Ç–∞–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    active_domain_record = db_manager.get_active_subscription_domain()
    active_domain = active_domain_record['domain_name'] if active_domain_record else None
    
    if not active_domain:
        webhook_domain = os.getenv("WEBHOOK_DOMAIN")
        active_domain = webhook_domain

    if not active_domain:
        bot.send_message(user_telegram_id, "‚ùå –î–ª—è —Å—Å—ã–ª–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –¥–æ–º–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
        return

    final_sub_link = f"https://{active_domain}/sub/{new_sub_id}"
    
    bot.send_message(user_telegram_id, "üéâ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
    send_subscription_info(bot, user_telegram_id, final_sub_link)