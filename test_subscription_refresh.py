"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import requests
import json

def test_webhook_endpoint():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoint –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoint –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π ===")
    
    # –¢–µ—Å—Ç —Å –ø—Ä–∏–º–µ—Ä–æ–º purchase_id
    test_purchase_id = "1"
    webhook_url = f"http://localhost:8080/admin/update_configs/{test_purchase_id}"
    headers = {
        'Authorization': 'Bearer your-secret-key'
    }
    
    try:
        response = requests.post(webhook_url, headers=headers, timeout=10)
        print(f"Status Code: {response.status_code}")
        print(f"Response: {response.text}")
        
        if response.status_code == 200:
            print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
        else:
            print("‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å")
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")

def test_subscription_endpoint():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoint –ø–æ–¥–ø–∏—Å–∫–∏"""
    print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoint –ø–æ–¥–ø–∏—Å–∫–∏ ===")
    
    # –¢–µ—Å—Ç —Å –ø—Ä–∏–º–µ—Ä–æ–º sub_id
    test_sub_id = "test123"
    webhook_url = f"http://localhost:8080/sub/{test_sub_id}"
    
    try:
        response = requests.get(webhook_url, timeout=10)
        print(f"Status Code: {response.status_code}")
        print(f"Content Type: {response.headers.get('content-type')}")
        print(f"Response Length: {len(response.text)}")
        
        if response.status_code == 200:
            print("‚úÖ –°—Å—ã–ª–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–∞")
            print(f"–ü—Ä–∏–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ: {response.text[:100]}...")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")

def test_admin_api_key():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API-–∫–ª—é—á–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API-–∫–ª—é—á–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ===")
    
    # –¢–µ—Å—Ç —Å –Ω–µ–≤–µ—Ä–Ω—ã–º API-–∫–ª—é—á–æ–º
    test_purchase_id = "1"
    webhook_url = f"http://localhost:8080/admin/update_configs/{test_purchase_id}"
    headers = {
        'Authorization': 'Bearer wrong-key'
    }
    
    try:
        response = requests.post(webhook_url, headers=headers, timeout=10)
        print(f"Status Code (wrong key): {response.status_code}")
        
        if response.status_code == 401:
            print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π")
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")

def test_missing_auth():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ ===")
    
    test_purchase_id = "1"
    webhook_url = f"http://localhost:8080/admin/update_configs/{test_purchase_id}"
    
    try:
        response = requests.post(webhook_url, timeout=10)
        print(f"Status Code (no auth): {response.status_code}")
        
        if response.status_code == 401:
            print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞")
        else:
            print("‚ùå –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞")
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")

if __name__ == "__main__":
    print("üöÄ –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏\n")
    
    test_webhook_endpoint()
    test_subscription_endpoint()
    test_admin_api_key()
    test_missing_auth()
    
    print("\n‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print("\nüìù –í–∞–∂–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏:")
    print("1. –°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏")
    print("2. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å—Å—ã–ª–∫–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ")
    print("3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å —Å–≤–æ–∏ —Å—Å—ã–ª–∫–∏ –æ—Ç–¥–µ–ª—å–Ω–æ")
    print("4. –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é API-–∫–ª—é—á–∞")
    print("5. –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞")